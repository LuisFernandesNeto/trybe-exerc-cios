// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'NEW_DATABASE_NAME';
const collection = 'NEW_COLLECTION_NAME';

// Create a new database.
use(database);

// Create a new collection.
db.createCollection(collection);

// The prototype form to create a collection:
/* db.createCollection( <name>,
  {
    capped: <boolean>,
    autoIndexId: <boolean>,
    size: <number>,
    max: <number>,
    storageEngine: <document>,
    validator: <document>,
    validationLevel: <string>,
    validationAction: <string>,
    indexOptionDefaults: <document>,
    viewOn: <string>,
    pipeline: <pipeline>,
    collation: <document>,
    writeConcern: <document>,
    timeseries: { // Added in MongoDB 5.0
      timeField: <string>, // required for time series collections
      metaField: <string>,
      granularity: <string>
    },
    expireAfterSeconds: <number>,
    clusteredIndex: <document>, // Added in MongoDB 5.3
  }
)*/

// More information on the `createCollection` command can be found at:
// https://www.mongodb.com/docs/manual/reference/method/db.createCollection/

use("Cinema");
db.movies.drop();
db.movies.insertMany([
  {
    title: "Batman",
    category: [
      "action",
      "adventure"
    ],
    imdbRating: 7.7,
    budget: 35,
    grossWorldwide: 411,
    ratings: [ 85, 100, 102, 105 ],
    description: "The Dark Knight of Gotham City begins his war on crime with his first major enemy being Jack Napier, a criminal who becomes the clownishly homicidal Joker."
  },
  {
    title: "Godzilla",
    category: [
      "action",
      "adventure",
      "sci-fi"
    ],
    imdbRating: 6.6,
    budget: 160,
    grossWorldwide: 524,
    ratings: [ 78, 52, 95, 102 ],
    description: "The world is beset by the appearance of monstrous creatures, but one of them may be the only one who can save humanity."
  },
  {
    title: "Home Alone",
    category: [
      "family",
      "comedy"
    ],
    imdbRating: 7.4,
    budget: 0,
    grossWorldwide: 476,
    ratings: [ 200, 99, 65 ],
    description: "An eight-year-old troublemaker must protect his house from a pair of burglars when he is accidentally left home alone by his family during Christmas vacation."
  },
  {
    title: "Matrix",
    category: [
      "sci-fi",
      "action"
    ],
    imdbRating: 8.7,
    budget: 63,
    grossWorldwide: 467,
    ratings: [ 77, 92, 150, 180 ],
    description: "When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth--the life he knows is the elaborate deception of an evil cyber-intelligence."
  },
  {
    title: "Pulp Fiction",
    category: [
      "crime",
      "drama"
    ],
    imdbRating: 8.9,
    budget: 8,
    grossWorldwide: 213,
    ratings: [ 110, 84, 95, 90 ],
    description: "The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption."
    },
   {
     title: "Stealth",
     category: [
       "action",
       "adventure",
       "sci-fi"
     ],
     imdbRating: 5.1,
     budget: 135,
     grossWorldwide: 79,
     ratings: [ 50, 48, 39, 67 ],
     description: "Deeply ensconced in a top-secret military program, three pilots struggle to bring an artificial intelligence program under control before it initiates the next world war."
   }
]);

// 1
use("Cinema");
db.movies.find({ category: { $all: ["action", "adventure"]}})

// 2
use("Cinema");
db.movies.find({category: { $all: ["action", "adventure"]}, imdbRating: { $gt: 7}})

// 3
use("Cinema")
db.movies.find({ratings: { $elemMatch: { $gt: 103}}}, { _id: 0, title: 1, ratings: 1})

// 4
use("Cinema")
db.movies.find({ratings: { $elemMatch: { $gte: 100, $lte: 105}}}, { _id: 0, title: 1, ratings: 1})

// 5
use("Cinema")
db.movies.find({ratings: { $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0]}}}, { _id: 0, title: 1, ratings: 1})

// 6
use("Cinema");
db.movies.find({ratings: { $gt: 103}, category: "adventure"}, {_id: 0, title: 1, ratings: 1, category: 1})

// 7
use("Cinema");
db.movies.find({category: {$size: 2}}, {_id: 0, title: 1})

// 8
use("Cinema");
db.movies.find({ratings: {$size: 4}}, {_id: 0, title: 1})

// 9
use("Cinema");
db.movies.find({budget: {$mod: [5, 0]}, category: { $size: 2}})

// 10
use("Cinema");
db.movies.find({ $or: [{category: "sci-fi"}, { ratings: {$gt: 199}}]}, {_id: 0, title: 1, ratings: 1, category: 1})

// 11
use("Cinema");
db.movies.find({$and: [{ratings:{ $size: 4}}, {category: { $in: ["adventure", "family"]}}, {imdbRating: {$gte: 7} }]})

// 12
use("Cinema");
db.movies.find({description: { $regex: /^The/}})

// 13
use("Cinema");
db.movies.find({description: { $regex: /humanity.$/}})

// 14
use("Cinema");
db.movies.find({$expr: { $lt: ["$budget", "$grossWorldwide"]}})